@using ChilliSource.Cloud.Web.MVC.Misc;
@inject ProjectSettings config

@{
    var leftLayout = User.Identity.IsAuthenticated && User.UserData().IsInRole(Role.Administrator);
}

<!DOCTYPE html>
<html lang="en" data-theme="dark">
<head>
    @Html.BlueChilliAsciiMotif()
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover">
    <meta name="color-scheme" content="dark light">
    <title>@Html.GetCurrentMenu().Title | @config.ProjectDisplayName</title>
    @if (config.GoogleTagManager.Enabled)
    {
        @await Html.TemplateAsync(TemplateTypes.GoogleTagManager)
    }
    <link rel="stylesheet" href="~/bundles/bootstrap.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/bundles/stylebundle.min.css" asp-append-version="true" />
    @RenderSection("styles", required: false)
    @await Html.PartialAsync("~/Views/Shared/Layout/_Icons.cshtml")
    @await Html.PartialAsync("~/Views/Shared/ConfirmationModalHandlebars.cshtml")
</head>

<body>
    <div class="d-flex flex-column flex-lg-row h-lg-full bg-surface-secondary">
        <!-- Sidebar -->
        @await Html.PartialAsync("~/Views/Shared/Layout/Clever/_SideBar.cshtml")

        <!-- Content -->
        <div class="flex-lg-1 h-screen overflow-y-lg-auto">
            @await Html.PartialAsync("~/Views/Shared/Layout/Clever/_NavBar.cshtml")

            @RenderBody()
        </div>
    </div>

    @Html.RenderBundle("~/bundles/scriptbundle.min.js")

    @RenderSection("scripts", required: false)
    @Html.RenderCustomSection("scripts")
    @RenderSection("modal", required: false)
    @await Html.PartialAsync("Layout/_Modal", new ModalViewModel { Menu = Mvc.Root.EmailAccount_ChangeDetails, Title = "Update profile" })
    @await Html.PartialAsync("Layout/_Modal", new ModalViewModel { Menu = Mvc.Root.EmailAccount_ChangePassword, Title = "Change password" })
    @await Html.PartialAsync("Layout/_Modal", new ModalViewModel { Menu = Mvc.Company.Company_Settings, Title = "Change settings", Size = ModalSize.Large })
</body>
</html>
