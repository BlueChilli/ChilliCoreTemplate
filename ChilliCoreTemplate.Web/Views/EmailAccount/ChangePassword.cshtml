@model ChangePasswordViewModel
@{
    Layout = "~/Views/Shared/Layout/_Layout.cshtml";
}
@await Html.PartialAsync("Layout/_Breadcrumb", new BreadcrumbOptions { })
@using (await Html.ContainerTemplateAsync(TemplateTypes.PageContainerLeft))
{
    @await Html.TemplateAsync(TemplateTypes.PageMessage)
    using (Html.BeginFormCustom(Mvc.Root.EmailAccount_ChangePassword))
    {
        @Html.ValidationSummary()
        <div class="ibox">
            <div class="ibox-title">
                <h5>New password details</h5>
            </div>
            <div class="ibox-content">
                @await Html.FieldTemplateForAsync(m => m.CurrentPassword)


                @using (await Html.FieldTemplateOuterForAsync(m => m.NewPassword))
                {
                    <div class="input-group">
                        @await Html.FieldTemplateInnerForAsync(m => m.NewPassword)
                        <span class="input-group-addon"><i class="fa fa-eye js-password-mask"> </i></span>
                    </div>
                }
            </div>
        </div>
        @await Html.TemplateAsync(TemplateTypes.PageButtons, new Template_PageButtons());
    }
}
@section scripts
{
    <script>
        $(function () {

            $('.js-password-mask').click(function () {
                $t = $(this);
                if ($t.hasClass('fa-eye')) {
                    $t.removeClass('fa-eye');
                    $t.addClass('fa-eye-slash');
                    $('#NewPassword').attr('type', 'text');
                } else {
                    $t.removeClass('fa-eye-slash');
                    $t.addClass('fa-eye');
                    $('#NewPassword').attr('type', 'password');
                }
            });

            $('form').submit(function () {
                $('#NewPassword').attr('type', 'password');
            });
        });
    </script>
}