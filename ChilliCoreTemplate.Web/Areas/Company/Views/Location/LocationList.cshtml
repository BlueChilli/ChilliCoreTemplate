@model LocationListModel
@{
}

@await Html.PartialAsync("Layout/_Breadcrumb", new BreadcrumbOptions { Partial = "_CreateLocation" })
@using (await Html.ContainerTemplateAsync(TemplateTypes.PageContainerLeft))
{
    @await Html.TemplateAsync(TemplateTypes.PageMessage)
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <div class="table-responsive">

                        <form role="form" class="form-inline">
                            <div class="form-group">
                                @await Html.FieldTemplateInnerForAsync(m => m.Status, fieldOptions: new SelectFieldTemplateOptions { SelectList = Model.StatusList })
                            </div>
                            <div class="float-right">
                                <div class="form-group">
                                    @await Html.FieldTemplateInnerForAsync(m => m.Search)
                                </div>
                            </div>
                        </form>

                        <table class="table table-striped table-bordered table-hover js-location-table">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>IP Address</th>
                                    <th>Active</th>
                                    <th style="width:150px;">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var location in Model.Locations)
                                {
                                    <tr>
                                        <td>@location.Name</td>
                                        <td>@location.IpAddress</td>
                                        <td data-search="@(location.IsActive ? 1: 0)"><span class="label label-@(location.IsActive ? "success" : "warning")">@(location.IsActive ? "Active" : "Inactive")</span></td>
                                        <td>
                                            <a href="@Mvc.Company.Location_Detail.Url(this.Url, location.Id)" class="m-r-sm">View</a>
                                            <a href="javascript:void(0);" onclick="@Html.ModalOpen(Mvc.Company.Location_Delete, location.Id)" class="m-r-sm">Delete</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        var locationTable;

        $(function () {

            locationTable = $('.js-location-table').dataTable({
                dom: 'Tgtip',
                "iDisplayLength": 50,
                "columnDefs": [
                    { "orderable": false, "targets": [3] }
                ],
            });

            $('#Search').on('keyup', function () {
                SearchTable();
            });

            $('#Status').on('change', function () {
                SearchTable();
            });
        });

        function SearchTable() {
            var api = locationTable.api();

            if ($('#Status').val() != '') {
                api.column(2).search($('#Status').val(), false, false, false);
            } else {
                api.column(2).search('');
            }

            api.search($('#Search').val());

            api.draw();

        }
    </script>
}
@section Modal
{
    @Html.PartialAsync("Layout/_Modal", new ModalViewModel { Menu = Mvc.Company.Location_Delete, Title = "Delete location", Size = ModalSize.Medium })
}
