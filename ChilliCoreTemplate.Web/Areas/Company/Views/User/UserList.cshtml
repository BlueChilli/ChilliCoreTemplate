@model UsersViewModel
@await Html.PartialAsync("Layout/_Breadcrumb", new BreadcrumbOptions { Partial = "_InviteUser" })
@using (await Html.ContainerTemplateAsync(TemplateTypes.PageContainerLeft))
{
    @await Html.TemplateAsync(TemplateTypes.PageMessage)
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>List of Users</h5>
                </div>
                <div class="ibox-content">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover js-users-table">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Surname</th>
                                    <th>Email</th>
                                    <th class="filtersearch" data-all="All roles">Role</th>
                                    <th class="filtersearch" data-all="Any status">Status</th>
                                    <th>Last login</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model.Accounts)
                                {
                                    <tr>
                                        <td>@user.FirstName</td>
                                        <td>@user.LastName</td>
                                        <td><a href="@Mvc.Company.User_Detail.Url(this.Url, new { user.Id })">@user.Email</a></td>
                                        <td>
                                            @String.Join(", ", user.UserRoles.Select(r => r.Role.GetDescription()))
                                        </td>
                                        <td><span class="label label-@(user.Status == UserStatus.Activated ? "success" : "warning")">@user.Status</span></td>
                                        <td>@if (user.LastLoginDate.HasValue) { @user.LastLoginDate.Value.ToIsoDate() }</td>
                                        <td>
                                            <a href="@Mvc.Company.User_Detail.Url(this.Url, new { user.Id })">View</a>
                                        </td>
                                    </tr>
                                }
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<form id="impersonate" target="_self" method="post" action="@Mvc.Company.User_Impersonate.Url(this.Url)">
    <input type="hidden" name="id" id="impersonate-id" value="" />
</form>
@section Scripts {
    <script>
        $(function () {

            $('.js-users-table').dataTable({
                dom: 'Tfgtip',
                "iDisplayLength": 50,
                "columnDefs": [
                  { "orderable": false, "targets": [3, 4, 6] }
                ],
                buttons: [
                     { extend: 'csv', exportOptions: { columns: [0, 1, 2, 3, 4, 5], format: { header: exportHeadingFormat } } },
                     { extend: 'excel', title: 'Users', exportOptions: { columns: [0, 1, 2, 3, 4, 5], format: { header: exportHeadingFormat } } }
                ],
                initComplete: function () {
                    var api = this.api();
                    this.api().columns('.filtersearch').indexes().flatten().each(function (i) {
                        var column = api.column(i);
                        var select = $('<select class="form-control"><option selected disabled>' + $(column.header()).text() + '</option></select>')
                            .appendTo($(column.header()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        select.append('<option value="">' + $(column.header()).data('all') + '</option>');
                        column.data().map(function (d, j) {
                            return $.parseHTML(d)[0].textContent;
                        }).unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });
                    });
                }
            });

            function exportHeadingFormat(data, column, node) {
                if (column === 3) return 'Role';
                if (column === 4) return 'Status';
                return data;
            }

            $(function () {
                $('.js-users-table').on('click', '.js-impersonate', function (e) {
                    e.preventDefault();
                    $('#impersonate-id').val($(this).data('id'));
                    $('#impersonate').submit();
                });
            });
        });
    </script>
}