@using Humanizer;
@model CompanyListModel

@await Html.PartialAsync("Layout/_Breadcrumb", new BreadcrumbOptions { Partial = "_CreateCompany" })

<page>
    @await Html.TemplateAsync(TemplateTypes.PageMessage)
    <box>
        <box-content>

            <form role="form" class="form-inline m-b-md">
                <div class="form-group">
                    @await Html.FieldTemplateInnerForAsync(m => m.Status, fieldOptions: new SelectFieldTemplateOptions { SelectList = Model.StatusList })
                </div>
                <div class="ml-auto">
                    <div class="form-group">
                        @await Html.FieldTemplateInnerForAsync(m => m.Search)
                    </div>
                </div>
            </form>

            <table-default class="js-company-table">
                <thead>
                    <tr>
                        <th>Company</th>
                        <th style="width:100px;">Status</th>
                        <th style="width:100px;">Date created</th>
                        <th style="width:150px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table-default>
        </box-content>
    </box>
</page>

@section Scripts
{
    <script>
        var companyTable;

        $(function () {

            companyTable = $('.js-company-table').dataTable({
                "processing": true,
                "serverSide": true,
                "deferLoading": 0,
                "ajax": {
                    "url": "@Mvc.Admin.Company_ListData.Url(this.Url)",
                    "type": "POST"
                },
                "columns": [
                    { "data": "name", "orderable": true },
                    {
                        "data": "status", "name": "status", orderable: false, render: function (data, type, row) {
                            return '<span class="label label-{0}">{1}</span>'.format(row.isDeleted ? "warning" : "success", row.isDeleted ? "Archived" : "Active");
                        }
                    },
                    { "data": "created", "orderable": true },
                    {
                        "data": null, orderable: false, render: function (data, type, row) {
                            var view = '<a href="@Mvc.Admin.Company_Detail.Url(this.Url)/{0}" class="m-r-sm">View</a>';
                            var impersonate = row.hasAdmins ? '<a href="#" class="js-impersonate" data-id="{0}">Impersonate</a>' : '';
                            return view.format(data.id) + impersonate.format(data.id);
                        }
                    }
                ],
                dom: 'Tgtip',
                "iDisplayLength": 50,
            });

            $('#Search').on('keyup', function () {
                SearchTable();
            });

            $('#Status').on('change', function () {
                SearchTable();
            });

            SearchTable();

            $('.js-company-table').on('click', '.js-impersonate', function (e) {
                e.preventDefault();
                $.doPost('@Mvc.Admin.Company_Impersonate.Url(this.Url)', { id: $(this).data('id') });
            });

        });

        function SearchTable() {
            var api = companyTable.api();

            if ($('#Status').val() != '') {
                api.column(1).search($('#Status').val(), false, false, false);
            } else {
                api.column(1).search('');
            }

            api.search($('#Search').val());

            api.draw();

        }

    </script>
}
