@model UserDetailsModel

@await Html.PartialAsync("Layout/_Breadcrumb", new BreadcrumbOptions { Title = Model.Account.FullName })
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>User: @Model.Account.FullName <span class="ibox-title-help">(@Model.Account.Email)</span></h5>
                    <div class="float-sm-right">
                        <div class="btn-group js-manage">
                            <button data-toggle="dropdown" class="btn btn-default btn-sm m-t-n-xs">Manage <span class="caret"></span></button>
                            <ul class="dropdown-menu float-right">
                                <li>
                                    <a class="dropdown-item" onclick="@Html.ModalOpen(Mvc.Admin.User_ResetPassword, Model.Account.Id)">Reset password</a>
                                </li>
                                <li>
                                    <a class="dropdown-item" onclick="@Html.ModalOpen(Mvc.Admin.User_ChangeDetails, Model.Account.Id)">Change account details</a>
                                </li>
                                <li>
                                    <a class="dropdown-item" onclick="@Html.ModalOpen(Mvc.Admin.User_ChangeRole, Model.Account.Id)">Change account role</a>
                                </li>
                                <li>
                                    <a class="dropdown-item" onclick="@Html.ModalOpen(Mvc.Admin.User_ChangeStatus, Model.Account.Id)">Change account status</a>
                                </li>

                                @if (User.UserData().CanImpersonate(Model.Account))
                                {
                                    <li>
                                        <a href="#" class="dropdown-item js-impersonate">Impersonate</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    Account information
                                </div>
                                <div class="panel-body">
                                    <p><b>Role:</b> @String.Join(", ", Model.Account.UserRoles.Select(r => r.Role.GetDescription()))</p>
                                    @if (Model.Account.UserRoles.Any(r => r.CompanyId.HasValue))
                                    {
                                        <p>
                                            <b>Company:</b>
                                            @foreach (var role in Model.Account.UserRoles.Where(r => r.CompanyId.HasValue))
                                            {
                                                <a mvc-action="Mvc.Admin.Company_Detail.AddRouteId(role.CompanyId.Value)">@role.CompanyName</a>
                                            }
                                        </p>
                                    }
                                    <p><b>Status:</b> @Model.Account.Status.GetDescription()</p>
                                    <p><b>Email:</b> <a href="mailto:@Model.Account.Email">@Model.Account.Email</a></p>
                                    @if (!String.IsNullOrEmpty(Model.Account.Phone))
                                    {
                                        <p><b>Phone:</b> @Model.Account.Phone</p>
                                    }
                                    @if (!String.IsNullOrEmpty(Model.Account.ProfilePhotoPath))
                                    {
                                        <p><b>Profile:</b> @Html.Resizer().Image(Model.Account.ProfilePhotoPath, new ImageSharpCommand { Width = 100, Format = ImageSharpFormat.JPG, Quality = 100 })</p>
                                    }
                                    @if (Model.Account.LastLoginDate.HasValue)
                                    {
                                        <p><b>Last Login Date:</b> @Model.Account.LastLoginDate.Value.ToTimezone().ToIsoDateTime()</p>
                                    }
                                    @if (Model.Account.ActivatedDate.HasValue)
                                    {
                                        <p><b>Activated Date:</b> @Model.Account.ActivatedDate.Value.ToTimezone().ToIsoDateTime()</p>
                                    }
                                    @if (Model.Account.LastPasswordChangedDate != null)
                                    {
                                        <p><b>Password Changed At:</b> @Model.Account.LastPasswordChangedDate.Value.ToTimezone().ToIsoDateTime()</p>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <span class="float-left">Last activity</span>
                                    <span class="ibox-tools">
                                        <a href="@Mvc.Admin.User_Activity.Url(this.Url, routeValues: new { UserId = Model.Account.Id })">
                                            <i class="fa fa-external-link-alt m-r-md"></i>
                                        </a>
                                    </span>
                                </div>
                                <div class="panel-body">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>Date</th>
                                                <th>Type</th>
                                                <th>Activity</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var activity in Model.LastActivities)
                                            {
                                                <tr>
                                                    <td>@activity.ActivityOn.ToTimezone().ToIsoDateTime()</td>
                                                    <td>@activity.EntityType.GetDescription()</td>
                                                    <td>@activity.ActivityType.GetDescription()</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<form id="impersonate" target="_self" method="post" action="@Mvc.Admin.User_Impersonate.Url(this.Url)">
    <input type="hidden" name="id" id="impersonate-id" value="@Model.Account.Id" />
</form>
@section Scripts {
    <script>
        $(function () {
            $('a.js-impersonate').click(function (e) {
                e.preventDefault();
                $('#impersonate').submit();
            });
        });
    </script>
}
@section modal
    {
    @await Html.PartialAsync("Layout/_Modal", new ModalViewModel { Menu = Mvc.Admin.User_ResetPassword, Title = "Reset password" })
    @await Html.PartialAsync("Layout/_Modal", new ModalViewModel { Menu = Mvc.Admin.User_ChangeDetails, Title = "Change details" })
    @await Html.PartialAsync("Layout/_Modal", new ModalViewModel { Menu = Mvc.Admin.User_ChangeRole, Title = "Change role" })
    @await Html.PartialAsync("Layout/_Modal", new ModalViewModel { Menu = Mvc.Admin.User_ChangeStatus, Title = "Change status" })
}