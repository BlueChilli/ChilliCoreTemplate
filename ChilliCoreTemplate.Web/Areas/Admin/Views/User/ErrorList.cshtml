@model ErrorListModel
@await Html.PartialAsync("Layout/_PageHeader", new PageHeaderOptions())
<page>
    @await Html.TemplateAsync(TemplateTypes.PageMessage)
    <filter>
        <filter-left>
            @await Html.FieldDateRangeForAsync(m => m.DateFrom, m => m.DateTo, x => x == null ? null : x.Value.ToTimezone().ToIsoDate())
        </filter-left>
        <filter-right>
            @await Html.FieldTemplateInnerForAsync(m => m.Search, fieldOptions: new InputFieldTemplateOptions { PreAddOn = FieldTemplateOptions.IconAddOn("search") })
        </filter-right>
    </filter>
    <box>
        <box-content>
            <table-default class="js-table">
                <thead class="table-light">
                    <tr>
                        <th data-priority="1">Date</th>
                        <th data-priority="4">User</th>
                        <th data-priority="3">Message</th>
                        <th data-priority="2">Actions</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table-default>
        </box-content>
    </box>
</page>
@section Scripts
{
    <script>
        var errorId;
        $(function () {
            $('.input-daterange').datepicker({
                format: 'yyyy-mm-dd',
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            }).on('changeDate', function (ev) {
                $('.js-table').DataTable().draw();
            });

            $('#Search').on('keyup', function () {
                table.draw();
            });

            var table = $('.js-table').DataTable({
                "processing": true,
                "serverSide": true,
                responsive: true,
                "ajax": {
                    "url": "@Mvc.Admin.User_Error_Query.Url(this.Url)",
                    "data": function ( d ) {
                        d.dateFrom = $('#DateFrom').val();
                        d.dateTo = $('#DateTo').val();
                        d.search = $('#Search').val();
                    }
                },
                "columns": [
                    { "data": "dateDisplay" },
                    {
                        "data": null,
                        "orderable": false,
                        render: function (data, type, row) {
                            return data.userId == null ? '' : '<a href="@Mvc.Admin.User_Users_Details.Url(this.Url)/{0}">{1}</a>'.format(data.userId, data.userEmail);
                        }
                    },
                    {
                        "data": "message",
                        "orderable": false
                    },
                    {
                        "orderable": false,
                        "data": null,
                        render: function ( data, type, row ) {
                            return '<a href="#" data-id="{0}" class="js-error-view btn btn-sm btn-square btn-neutral" data-bs-toggle="tooltip" data-bs-original-title="View"><i class="bi bi-eye"></i></a>'.format(data.id);
                        }
                    },
                ],
                "iDisplayLength": 50,
                dom: 'Tgtip'
            });

            $('.js-table').on('click', '.js-error-view', function (e) {
                e.preventDefault();
                errorId = $(this).data('id');
                @Html.ModalOpen(Mvc.Admin.User_Error_Detail, data: "{ id: errorId }");
            });

        });
    </script>
}
@section modal
{
    @await Html.PartialAsync("Layout/_Modal", new ModalViewModel { Menu = Mvc.Admin.User_Error_Detail, Title = "Error detail", Size = ModalSize.ExtraLarge })
}