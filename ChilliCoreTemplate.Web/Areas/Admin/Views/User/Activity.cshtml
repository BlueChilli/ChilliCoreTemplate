@model UserActivityModel
@using (await Html.ContainerTemplateAsync(TemplateTypes.PageHeader, new PageHeaderOptions())) { }

<page>
    @await Html.TemplateAsync(TemplateTypes.PageMessage)
    <filter>
        <filter-left>
            @await Html.FieldDateRangeForAsync(m => m.DateFrom, m => m.DateTo, x => x == null ? null : x.Value.ToTimezone().ToIsoDate())
        </filter-left>
    </filter>
    <filter>
        <filter-left>
            @await Html.FieldTemplateInnerForAsync(m => m.Entity)
            @await Html.FieldTemplateInnerForAsync(m => m.Activity)
        </filter-left>
        <filter-right>
            @await Html.FieldTemplateInnerForAsync(m => m.Search, fieldOptions: new InputFieldTemplateOptions { PreAddOn = FieldTemplateOptions.IconAddOn("search") })
        </filter-right>
    </filter>

    <box>
        <box-content>
            <table-default class="js-table">
                <thead class="table-light">
                    <tr>
                        <th></th>
                        <th>Date</th>
                        <th>Users</th>
                        <th>Entity</th>
                        <th>Activity</th>
                        <th>Entity Id</th>
                        <th>Target Id</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table-default>
        </box-content>
    </box>
</page>
@section Styles
    {
    <style>
        tr td.details-control .bi-arrows-angle-contract {
            display: none;
        }

        tr.shown td.details-control .bi-arrows-angle-contract {
            display: block;
        }

        tr.shown td.details-control .fa-expand {
            display: none;
        }
    </style>
}

@section Scripts
    {
    <script>
        $(function () {
            $('.input-daterange').datepicker({
                format: 'yyyy-mm-dd',
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            }).on('changeDate', function (ev) {
                $('.js-table').DataTable().draw();
            });

            $('#Entity, #Activity').on('change', function () {
                table.draw();
            });

            $('#Search').on('keyup', function () {
                table.search($('#Search').val());
                table.draw();
            });

            var table = $('.js-table').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "@Mvc.Admin.User_ActivityQuery.Url(this.Url)",
                    "data": function ( d ) {
                        d.dateFrom = $('#DateFrom').val();
                        d.dateTo = $('#DateTo').val();
                        d.EntityType = $('#Entity').val();
                        d.ActivityType = $('#Activity').val();
                    }
                },
                "columns": [
                    {
                        "className": 'details-control',
                        "orderable": false,
                        "data": null,
                        "name": "id",
                        "defaultContent": '<i class="bi bi-arrows-angle-expand"></i><i class="bi bi-arrows-angle-contract"></i>'
                    },
                    { "data": "activityOnDisplay" },
                    { "data": "user" },
                    { "data": "entityTypeDescription" },
                    { "data": "activityTypeDescription" },
                    { "data": "entityId" },
                    { "data": "targetId" }
                ],
                "order": [[1, 'desc']],
                "iDisplayLength": 50,
                dom: 'Tgtip'
            });

            $('.js-table tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);

                if (row.child.isShown()) {
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    formatChildRow(row.data()).done(function (result) {
                        row.child(result).show();
                    });
                    tr.addClass('shown');
                }
            });
        });

        function formatChildRow(d) {
            return $.ajax({ url: '@Mvc.Admin.User_ActivityDetail.Url(this.Url)?id=' + d.id });
        }
    </script>
}
