@model ChangeAccountRoleModel
@using (Html.BeginFormCustom(Mvc.Admin.User_ChangeRole))
{
    <div class="modal-body">
        @Html.ValidationSummary()
        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            @await Html.FieldTemplateForAsync(model => model.Role, options: new TemplateOptions { Template = FieldTemplateLayouts.ModalField }, fieldOptions: new SelectFieldTemplateOptions { SelectList = Model.RoleList })

            <div id="CompanyDetails" class="@Html.When(!RoleHelper.IsCompanyRole(Model.Role), "hide")">
                @await Html.FieldTemplateForAsync(m => m.CompanyId, new TemplateOptions { Template = FieldTemplateLayouts.ModalField, IsMandatory = true }, fieldOptions: new SelectFieldTemplateOptions { SelectList = Model.CompanyList })
            </div>
        </div>

    </div>
    <div class="modal-footer">
        @await Html.ButtonSubmitAsync("Submit")
        @await Html.ButtonAsync(FieldTemplateHelper.ButtonModalDismissOptions)
    </div>
}
<script>
    $('#@Mvc.Admin.User_ChangeRole.GetFormId()').ajaxForm({ target: '#@Mvc.Admin.User_ChangeRole.GetModalId()_content' });

    $('#@Html.IdFor(m => m.Role)').on('change', function () {

        if ($(this).val() === '@Role.CompanyAdmin.ToString()' || $(this).val() === '@Role.CompanyUser.ToString()') {
            $('#CompanyDetails').removeClass('hide');
        } else {
            $('#CompanyDetails').addClass('hide');
        }
    });

    $('#CompanyId').chosen({
        width: "100%",
        placeholder_text: "Any company"
    });

    $('#CompanyId').ajaxChosen({
        type: 'POST',
        url: '@Mvc.Admin.Company_ListJson.Url(Url)',
        dataType: 'json'
    }, function (data) {
        var results = [];
        $.each(data.data, function (i, val) {
            results.push({ value: val.value, text: val.text });
        });
        return results;
    });

</script>
